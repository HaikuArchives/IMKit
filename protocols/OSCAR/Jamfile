SubDir TOP protocols OSCAR ;

SubDirHdrs [ FDirName $(TOP) ] ;
SubDirHdrs [ FDirName $(OPENSSL_INCLUDE_DIR) ] ;

SEARCH_SOURCE += [ FDirName $(TOP) common ] ;

AddOn aim :
	AIM.cpp
	FLAP.cpp
	TLV.cpp
	OSCARManager.cpp
	SNAC.cpp
	OSCARConnection.cpp
	OSCARBOSConnection.cpp
	OSCARReqConn.cpp
	Buddy.cpp
	Group.cpp
	: be $(TARGET_LIBSTDC++) textencoding libcommon.a libim.so crypto
	: AIM.rdef AIMProtocolTemplate.rdef
;

Depends aim : libcommon.a ;
Depends aim : libim.so ;

AddOn icq :
	ICQ.cpp
	FLAP.cpp
	TLV.cpp
	OSCARManager.cpp
	SNAC.cpp
	OSCARConnection.cpp 
	OSCARBOSConnection.cpp
	OSCARReqConn.cpp
	Buddy.cpp
	Group.cpp
	: be $(TARGET_LIBSTDC++) textencoding libcommon.a libim.so crypto
	: ICQ.rdef ICQProtocolTemplate.rdef
;

Depends icq : libcommon.a ;
Depends icq : libim.so ;

if $(OS) = HAIKU {
	LINKFLAGS on aim += -lnetwork ;
	LINKFLAGS on icq += -lnetwork ;
}

if $(OS) = BEOS {
	LINKFLAGS on aim += -lsocket ;
	LINKFLAGS on icq += -lsocket ;
}

if $(OS) = ZETA {
	LINKFLAGS on aim += -lsocket -lbind ;
	LINKFLAGS on icq += -lsocket -lbind ;
	SubDirHdrs /boot/develop/headers/be/bone ;
	SVGIcon aim : [ FDirName $(TOP) icons imkit protocols AIM.svg ] ;
	SVGIcon icq : [ FDirName $(TOP) icons imkit protocols ICQ.svg ] ;
}

LINKFLAGS on aim += -L$(OPENSSL_LIBRARY_DIR) ;
LINKFLAGS on icq += -L$(OPENSSL_LIBRARY_DIR) ;

InstallLib $(COMMON_ADDONS_DIRECTORY)/im_kit/protocols : aim ;
InstallLib $(COMMON_ADDONS_DIRECTORY)/im_kit/protocols : icq ;

Package imkit :
	aim :
	[ FSplitPath $(COMMON_ADDONS_DIRECTORY)/imkit/protocols ]
;
Package imkit :
	icq :
	[ FSplitPath $(COMMON_ADDONS_DIRECTORY)/imkit/protocols ]
;
